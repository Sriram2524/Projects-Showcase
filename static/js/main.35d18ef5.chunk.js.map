{"version":3,"sources":["components/ProjectItem/index.js","components/Projects/index.js","App.js","index.js"],"names":["ProjectItem","props","eachProjectItem","name","imageUrl","className","alt","src","categoriesList","id","displayText","apiStatusConstants","Projects","state","activeId","projectsList","apiStatus","getProjects","setState","url","options","method","fetch","response","ok","json","data","formattedData","projects","map","each","image_url","renderProjectsListView","onClickFailure","renderFailureView","onClick","type","renderLoadingView","color","height","width","onChangeDropDown","event","target","value","renderAllItems","this","onChange","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35d18ef5.chunk.js","sourcesContent":["import './index.css'\n\nconst ProjectItem = props => {\n  const {eachProjectItem} = props\n  const {name, imageUrl} = eachProjectItem\n\n  return (\n    <li className=\"list\">\n      <img alt={name} src={imageUrl} />\n      <p className=\"name\">{name}</p>\n    </li>\n  )\n}\nexport default ProjectItem\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport ProjectItem from '../ProjectItem'\nimport './index.css'\n\nconst categoriesList = [\n  {id: 'ALL', displayText: 'All'},\n  {id: 'STATIC', displayText: 'Static'},\n  {id: 'RESPONSIVE', displayText: 'Responsive'},\n  {id: 'DYNAMIC', displayText: 'Dynamic'},\n  {id: 'REACT', displayText: 'React'},\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Projects extends Component {\n  state = {\n    activeId: categoriesList[0].id,\n    projectsList: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getProjects()\n  }\n\n  getProjects = async () => {\n    const {activeId} = this.state\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const url = `https://apis.ccbp.in/ps/projects?category=${activeId}`\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok === false) {\n      const data = await response.json()\n      const formattedData = data.projects.map(each => ({\n        id: each.id,\n        name: each.name,\n        imageUrl: each.image_url,\n      }))\n      this.setState({\n        projectsList: formattedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderProjectsListView = () => {\n    const {projectsList} = this.state\n    return (\n      <ul className=\"unordered-projcets-list\">\n        {projectsList.map(each => (\n          <ProjectItem eachProjectItem={each} key={each.id} />\n        ))}\n      </ul>\n    )\n  }\n\n  onClickFailure = () => {\n    this.getProjects()\n  }\n\n  renderFailureView = () => (\n    <div className=\"faillure-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/projects-showcase/failure-img.png \"\n        alt=\"failure view\"\n        className=\"faillure-view-img\"\n      />\n      <h1 className=\"heading\">Oops! Something Went Wrong</h1>\n      <p className=\"para\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        onClick={this.onClickFailure}\n        type=\"button\"\n        className=\"faillure-button\"\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div data-testid=\"loader\" className=\"products-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  onChangeDropDown = event => {\n    this.setState({activeId: event.target.value}, this.getProjects)\n  }\n\n  renderAllItems = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderProjectsListView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {activeId} = this.state\n    return (\n      <div className=\"bg-container\">\n        <div className=\"header\">\n          <img\n            className=\"logo\"\n            src=\"https://assets.ccbp.in/frontend/react-js/projects-showcase/website-logo-img.png\"\n            alt=\"website logo\"\n          />\n        </div>\n        <select\n          className=\"select\"\n          onChange={this.onChangeDropDown}\n          value={activeId}\n        >\n          {categoriesList.map(each => (\n            <option value={each.id} key={each.id}>\n              {each.displayText}\n            </option>\n          ))}\n        </select>\n        {this.renderAllItems()}\n      </div>\n    )\n  }\n}\nexport default Projects\n","import Projects from './components/Projects'\nimport './App.css'\n\nconst App = () => <Projects />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}